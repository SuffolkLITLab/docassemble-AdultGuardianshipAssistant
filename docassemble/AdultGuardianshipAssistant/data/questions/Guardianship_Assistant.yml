include:
  - docassemble.AssemblyLine:al_package.yml
  - docassemble.MassAccess:massaccess.yml
  - Bond_MPC_801.yml
  - mpc320-verified-motion-for-appt-temp-guardian-for-incapacitated-person.yml
  - mpc825-treatment-plan.yml
---
comment: |
  The metadata section controls the tab title and saved interview title. You can delete this section if you include this YAML file in another YAML file.
metadata:
  title: |
    Adult Guardianship Assistant
  short title: |
    Guardianship Assistant
  tags: 
    - ES-00-00-00-00
    - HE-00-00-00-00
  authors:
    - Kisha Wilson
    - Mallory Ursul
    - Thomas Levu
    - Quinten Steenhuis
---
comment: |
  This section is used by AssemblyLine to control how some of the questions work.
mandatory: True
code: |
  interview_metadata # make sure we initialize the object
  if not defined("interview_metadata['Guardianship_Assistant']"):
    interview_metadata.initializeObject('Guardianship_Assistant')
  interview_metadata['Guardianship_Assistant'].update({
    'title': 'Request a Guardanship',
    'short title': 'Guardianship Assistant',
    'description': 'The Adult Guardianship Assistant provides information on adult guardianship in Massachusetts and guides users in filling out court forms.',
    'original_form': 'https://www.mass.gov/doc/petition-for-appointment-of-guardian-for-an-incapacitated-person-mpc-120/download',
    'allowed courts': [
    ],
    'categories': [
      'ES-00-00-00-00',
      'HE-00-00-00-00',
    ],
    'logic block variable': 'Guardianship_Assistant',
    'attachment block variable': 'Guardianship_Assistant_attachment',
    'typical role': 'plaintiff',
  })
---
code: |
  interview_short_title = 'Ask the court to assign a Guardian of an incapacitated adult'
---
code: |
  al_form_type = 'other_form'
---
features:
  navigation: True
---
sections:
  - review_Guardianship_Assistant: Review your answers
---
objects:
  - users: ALPeopleList.using(ask_number=True)
  - other_parties: ALPeopleList.using(ask_number=True, target_number=1)  
  - Guardian: ALIndividual
  - Attorney: ALIndividual
  - spouses: ALPeopleList.using(ask_number=True,complete_attribute="complete_table_9")
  - children: ALPeopleList.using(ask_number=True,complete_attribute="complete_table_9")
  - parents: ALPeopleList
  - siblings: ALPeopleList.using(ask_number=True)
  - caretakers: ALPeopleList.using(complete_attribute="complete_table_9")
  - guardians: ALPeopleList.using(complete_attribute="complete_table_9")
  - nominated_guardian: ALPeopleList.using(complete_attribute="complete_table_9")
  - rep_payees: ALPeopleList.using(complete_attribute="complete_table_9")
  - healthcare_proxies: ALPeopleList.using(complete_attribute="complete_table_9")
  - durable_powers_of_attorney: ALPeopleList.using(complete_attribute="complete_table_9")  
  - person_with_care_or_custody: ALPeopleList.using(complete_attribute="complete_table_9")
  - relationship_people_choices: DAList.using(auto_gather=False)  
---
objects:
  - other_parties[0].new_address: ALAddress  
---
code: |
  al_form_type = 'starts_case'
---
###################### Main order ######################
mandatory: True
id: main_order_Guardianship_Assistant
code: |
  al_intro_screen
  Guardianship_Assistant_intro
  # Interview order block has form-specific logic controlling order/branching
  interview_order_Guardianship_Assistant
  signature_date
  # Save (anonymized) interview statistics.
  store_variables_snapshot(data={'zip': users[0].address.zip})
  Guardianship_Assistant_preview_question  # Pre-canned preview screen
  basic_questions_signature_flow
  Guardianship_Assistant_download
---
#################### Interview order #####################
comment: |
  Controls order and branching logic of questions in the interview
id: interview_order_Guardianship_Assistant
code: |
  # Set the allowed courts for this interview
  allowed_courts = interview_metadata["Guardianship_Assistant"]["allowed courts"]
  nav.set_section('review_Guardianship_Assistant')  
  other_parties[0].name.first
  if not last_option: 
    all_done    
  user_role = 'plaintiff'
  temporary_needed
  users[0].name.first
  other_parties[0].birthdate  
  if other_parties[0].age_in_years() < 18:
    exit_not_adult
  Petitioner_relationship  
  # has_copetitioner
  if has_copetitioner:
    users[1].address.address
  else:
    users[0].address.city
  users[0].address.city
  users[0].email
  Respondent_intellectual_disabled  
  Petitioner_interest_list
  if not Same_address_yes:
    other_parties[0].address.address
  other_parties[0].gender
  spouses.gather()
  parents.gather()
  siblings.gather()
  caretakers.gather()
  children.gather()
  Respondent_address_date
  guardians.gather()
  nominated_guardian.gather()
  rep_payees.gather()
  healthcare_proxies.gather()
  durable_powers_of_attorney.gather()
  person_with_care_or_custody.gather()
  
  set_progress(9.09)  
  Has_Assets
  Petitioner_appointee
  if not Petitioner_appointee and Other_appointee_yes:
    Guardian.name.last
    Guardian.address.address
    Guardian.address.address
    Guardian.email
    Guardian.address.city
    Guardian.name.first    
    Guardian_relationship    
  set_progress(18.18)
  guardianship_type
  Nursing_facility_yes
  trial_court
  Bond_Waiver_yes
  Petition_Assetattachment_yes
  set_progress(27.27)
  Attorney_BBO
  docket_numbers.gather()
  Attorney.address.address
  set_progress(36.36)
  Attorney.phone_number
  set_progress(45.45)
  Attorney.address.city
  other_parties[0].gender
  Attorney.address.address
  set_progress(54.55)  
  coguardian_attachment_yes
  if coguardian_attachment_yes:
    coguardian_name_first
    CoGuardian_relationship
  other_parties[0].name.last
  users[0].address.address
  users[0].name.first
  set_progress(63.64)
  users[0].phone_number
  set_progress(72.73)
  Attorney.email
  # TODO add conditional logic if we don't need the form
  interview_order_Bond_MPC_801
  interview_order_mpc320verifiedmotionforappttempguardianforincapacitatedperson
  interview_order_mpc825treatmentplan
  Attorney.address.unit
  Attorney
  interview_order_Guardianship_Assistant = True
---
id: Request a Guardanship
continue button field: Guardianship_Assistant_intro
question: |
  Adult Guardianship Assistant
subquestion: |
    **The Adult Guardianship Assistant provides information on adult
    guardianship in Massachusetts and guides users in filling out court forms.**

    This interview should take approximately 30-60 minutes to complete. At any
    time during the interview, you can save your answers and return later to
    finish the interview.

    Please see the [Glossary of
    Terms](https://suffolklitlab.org/selfhelp/health_glossary.html#top) to help
    you complete this interview. The Glossary opens in a separate window and
    defines some of the words and phrases used in this interview that may not be
    familiar to most people.

    At the end of this interview, you will be able to download partially
    completed court documents and a "next steps" checklist.

    *Disclaimer: This questionnaire is informational only, and is not legal
    advice. Use of this questionnaire does not create an attorney-client
    relatiobship. Please contact an attorney for legal advice directed at any
    specific concerns you may have.*
---
id: Guardianship Filter
mandatory: true
question: |
  Is a guardianship the right choice for ${ other_parties.familiar() }?
subquestion: |
  Before we keep going, let's make sure that guardianship is the right
  choice to protect ${ other_parties.familiar() }.

  Guardianships transfer decision-making power away from an individual to the
  Guardian. It is meant to be used in situations where the individual cannot
  make or communicate decisions or preferences. Guardianships are difficult to
  undo and should be viewed as a last resort.

  Other options include:

  * [Supported Decision Making](https://supporteddecisions.org); 
  * [Healthcare
  Proxy](https://masshealthdecisions.org/health-care-proxy/#:~:text=The%20Massachusetts%20Health%20Care%20Proxy,or%20communicate%20those%20decisions%20yourself.Healthcare
  Proxy Forms); 
  * [Representative Payeee](https://www.ssa.gov/payee/faqrep.htm);
  or
  * [Durable Power of
  Attorney](https://www.mass.gov/service-details/learn-about-the-power-of-attorney)
field: last_option
buttons:
  - "Research Alternatives": False
  - "Proceed with Guardianship": True
---
id: birthdate only
question: |
  When was ${ other_parties.familiar() } born? 
  - no label: other_parties[0].birthdate
    datatype: BirthDate 
---
event: exit_not_adult
id: not an adult
question: |
  This is not the right form for you
decoration: hand-paper
subquestion: |
  You can only use this form to get protections for an **adult**.
  ${ other_parties[0].familiar() } is only ${ other_parties[0].age_in_years() }.
buttons:
  - Exit: exit
---
question: |
  Thank you for using the Guardianship Assistant
subquestion: |
  Below please find some resources to help you get started. If you decide to
  move forward with Guardianship please visit again. Other options may include
  one or more of the following:

  * [Supported Decision Making](https://supporteddecisions.org); 
  * [Healthcare
  Proxy](https://masshealthdecisions.org/health-care-proxy/#:~:text=The%20Massachusetts%20Health%20Care%20Proxy,or%20communicate%20those%20decisions%20yourself.Healthcare
  Proxy Forms); 
  * [Representative Payeee](https://www.ssa.gov/payee/faqrep.htm);
  and/or * [Durable Power of
  Attorney](https://www.mass.gov/service-details/learn-about-the-power-of-attorney)
event: all_done
---
id: Temporary Guardianship
question: | 
  Do you need to the court to decide on this case in the next 90 days?
subquestion: |
  ${ collapse_template(when_temporary_guardianship_possible_template) }
fields: 
  - I need a temporary guardianship: temporary_needed
    datatype: yesnoradio    
---
template: when_temporary_guardianship_possible_template
subject: |
  When can I get a temporary guardianship?
content:  |
  You may request a temporary guardianship if there is an emergency or urgent
  situation or appointment which requires a guardian within the next 90 days.
---
id: Has Co-Petitioner?
question: |
  Is there a Co-Petitioner?
subquestion: |
  The "Co-Petitioner" is a second person asking the court to appoint a guardian for ${ other_parties.familiar() }.
yesno: has_copetitioner
---
code: |
  if has_copetitioner:
    users.target_number=2
  else:
    users.target_number=1
---
code: |
  # TODO: use ALDocumentBundle
  if has_copetitioner:
    copetitioner_attachment_yes = True
  else:
    copetitioner_attachment_yes = False
---
sets: 
  - users[1].name.first
question: |
  What is the Co-Petitioner's name?
subquestion: |
  The "Co-Petitioner" is a second person asking the court to appoint a guardian
  for ${ other_parties.familiar() }.
fields:
  - code: |
      users[1].name_fields()
---
id: more about copetitioner
question: | 
  Where does ${ users[1] } live?
fields:
  - Does ${ users[1] } live at a different address than ${ users[0].familiar() }?: CoPetitioner_Petitioner_different_address
    datatype: yesnoradio
    required: false
    disable others: True    
  - code: |
      users[1].address_fields(default_state="MA")
---
use objects: True
variable name: relationship_options
data:
  spouse: 
    question: Spouse
    document: spouse    
  parent:    
    question: Parent
    document: parent
  child:
    question: Child
    document: child
  sibling:    
    question: Sibling
    document: sibling
  uncle_aunt:    
    question: Sibling of parent
    document: sibling of parent
  niece_nephew:    
    question: Child of parent's sibling
    document: child of parent's sibling
  cousin:
    question: Cousin
    document: cousin
  grandparent:    
    question: Grandparent
    document: grandparent
  other:    
    question: Other
    document: other
---
id: other contact for copetitioner      
question: |
  Other contact information for ${ users[1] }
fields:
  - Primary Phone: users[1].phone_number
  - E-mail Address: users[1].email
  - Relationship to ${ other_parties.familiar() }: CoPetitioner_relationship
    datatype: radio
    code: |
      relationship_options.items()
  - Why is the Co-Petitioner interested in the appointment of a Guardian for ${ other_parties[0] }? Please explain in 1-3 sentences: CoPetitioner_interests
    input type: area
    rows: 10
---
sets:
  - other_parties[i].name.first
id: names of respondent
question: |
  Who are you asking to protect?
fields:
  - code: |
      other_parties[i].name_fields()
---
id: name of the caretaker
sets:
  - caretakers[i].name.first
  - caretakers[i].name.last
question: |
  Name of ${ other_parties[0].familiar() }'s ${ ordinal(i) } caretaker
fields:
  - code: |
      caretakers[i].name_fields()      
---
id: email
question: |
  What is your email address?
fields:
  - E-mail Address: users[0].email
    maxlength: 37
---
id: reason for guardianship
question: |
  What is your **interest** in getting a guardian for ${ other_parties.familiar() }?
subquestion: |
  Use your own words to briefly explain why
  **you** should be able to ask the court for a guardian. For example: explain
  your relationship to ${ other_parties.familiar() } and your
  responsibility for their safety.
fields:
  - no label: Petitioner_interest_list
    datatype: area
    rows: 5
---
id: Tell me more about the Petitioner
question: |
  How are you related to ${ other_parties.familiar() }?
fields:
  - "I am ${ other_parties.familiar() }'s:" : Petitioner_relationship
    datatype: radio
    code: |
      relationship_options.items()
---
sets:
  - other_parties[0].gender
id: Tell me more about Respondent
question: |
  Information about ${ other_parties[0] }
fields:
  - code: |
      other_parties[0].gender_fields()          
  - Primary Language: primary_language
    choices:
      - English
      - Spanish
      - Other
  - Other language: primary_language_other
    show if:
      variable: primary_language
      is: Other
  - Primary Phone Number: other_parties[0].phone_number
  - Does ${ other_parties.familiar() } live with you?: Same_address_yes
    datatype: yesnoradio
  - Does ${ other_parties.familiar() } have a MOLST (Medical Orders for Life-Sustaining Treatment)?: RespondentMOLST
    datatype: yesnoradio
    help: |
      A document executed by the Respondent that describes a person’s wishes
      about end-of-life medical care. For more information on what a MOLST is
      please visit: https://www.molst-ma.org/.
  - Does ${ other_parties.familiar() } qualify to get benefits from the Veteran's Authority?: RespondentVA
    datatype: yesnomaybe

---
reconsider: True
code: |
  relationship_people_choices.clear()
  relationship_people_choices.extend(guardians.complete_elements())  
  relationship_people_choices.extend(spouses.complete_elements())
  relationship_people_choices.extend(parents.complete_elements())
  relationship_people_choices.extend(siblings.complete_elements())
  relationship_people_choices.extend(caretakers.complete_elements())
  relationship_people_choices.extend(nominated_guardian.complete_elements())
  relationship_people_choices.extend(rep_payees.complete_elements())
  relationship_people_choices.extend(healthcare_proxies.complete_elements())
  relationship_people_choices.extend(durable_powers_of_attorney.complete_elements())
  relationship_people_choices.extend(person_with_care_or_custody.complete_elements())
  relationship_people_choices.extend(relationship_people_choices.complete_elements())
  relationship_people_choices.gathered = True
---
sets:
  - guardians[i].name.first
  - guardians[i].name.last
id: guardians
question: |  
  Name of ${ ordinal(i) } guardian
fields:
  - Existing person: guardians[i]
    datatype: object
    choices: relationship_people_choices
    disable others: True
    exclude:
      - guardians.complete_elements()
  - code: |
      guardians[i].name_fields()
  - Phone number: guardians[i].phone_number
    required: False
  - code: |
      guardians[i].address_fields()
  - Is the ${ ordinal(i) } guardian a minor? (under 18): guardians[i].is_minor
    datatype: yesnoradio
  - Is the ${ ordinal(i) } guardian incompetent?: guardians[i].is_incompetent
    datatype: yesnoradio
  - Relationship to ${ other_parties.familiar() }: guardians[i].relationship  
---
generic object: ALIndividual
code: |
  x.name.first
  x.phone_number
  x.is_minor
  x.is_incompetent
  x.address.address
  x.relationship
  x.complete_table_9 = True
---
sets:
  - x.address.address
generic object: ALIndividual
id: more info about a person
question: |
  More information about ${ x }
fields:
  - Phone number: x.phone_number
    required: False
  - code: |
      x.address_fields()
  - Is ${x.familiar()} a minor? (under 18): x.is_minor
    datatype: yesno
  - Is ${x.familiar()} incompetent?: x.is_incompetent
    datatype: yesno
  - Relationship to ${ other_parties.familiar() }: x.relationship
---
sets:
  - other_parties[0].address.address
  - other_parties[0].address.city
  - other_parties[0].address.state
  - other_parties[0].address.zip
question: |
  Where does ${ other_parties.familiar() } live?
fields:
  - code: |
      other_parties[0].address_fields(default_state="MA")
---
sets:
  - nominated_guardian[i].name.first
  - nominated_guardian[i].name.last
id: nominated_guardian
question: |
  Name of ${ ordinal(i) } nominated_guardian
fields:
  - Existing person: nominated_guardian[i]
    datatype: object
    choices: relationship_people_choices
    disable others: True      
    exclude:
      - nominated_guardian.complete_elements()    
  - code: |
      nominated_guardian[i].name_fields()
  - code: |
      nominated_guardian[i].address_fields()
  - Phone number: nominated_guardian[i].phone_number
    required: False
  - Is the ${ ordinal(i) } nominated guardian a minor? (under 18): nominated_guardian[i].is_minor
    datatype: yesno
  - Is the ${ ordinal(i) } nominated guardian incompetent?: nominated_guardian[i].is_incompetent
    datatype: yesno
  - Relationship to ${ other_parties.familiar() }: nominated_guardian[i].relationship
---
sets:
  - rep_payees[i].name.first
  - rep_payees[i].name.last
id: rep_payees
question: |  
  Name of ${ ordinal(i) } rep_payees
fields:
  - Existing person: rep_payees[i]
    datatype: object
    choices: relationship_people_choices
    disable others: True
    exclude:
      - rep_payees.complete_elements()    
  - code: |
      rep_payees[i].name_fields()
  - Phone number: rep_payees[i].phone_number
    required: False
  - code: |
      rep_payees[i].address_fields()
  - Is the ${ ordinal(i) } rep_payees a minor? (under 18): rep_payees[i].is_minor
    datatype: yesno
  - Is the ${ ordinal(i) } rep_payees incompetent?: rep_payees[i].is_incompetent
    datatype: yesno
  - Relationship to ${ other_parties.familiar() }: rep_payees[i].relationship
---
sets:
  - healthcare_proxies[i].name.first
  - healthcare_proxies[i].name.last
id: healthcare_proxies
question: |
  Name of ${ ordinal(i) } healthcare_proxies
fields:
  - Existing person: healthcare_proxies[i]
    datatype: object
    choices: relationship_people_choices
    disable others: True
    exclude:
      - healthcare_proxies.complete_elements()    
  - code: |
      healthcare_proxies[i].name_fields()
  - code: |
      healthcare_proxies[i].address_fields()
  - Phone number: healthcare_proxies[i].phone_number
    required: False
  - Is the ${ ordinal(i) } healthcare_proxies a minor? (under 18): healthcare_proxies[i].is_minor
    datatype: yesno
  - Is the ${ ordinal(i) } healthcare_proxies incompetent?: healthcare_proxies[i].is_incompetent
    datatype: yesno
  - Relationship to ${ other_parties.familiar() }: healthcare_proxies[i].relationship
---
sets:
  - durable_powers_of_attorney[i].name.first
  - durable_powers_of_attorney[i].name.last
id: durable_powers_of_attorney
question: |
  Name of ${ ordinal(i) } person with a durable power of attorney for ${ other_parties.familiar() }
fields:
  - Existing person: durable_powers_of_attorney[i]
    datatype: object
    choices: relationship_people_choices
    disable others: True
    exclude:
      - durable_powers_of_attorney.complete_elements()    
  - code: |
      durable_powers_of_attorney[i].name_fields()
  - code: |
      durable_powers_of_attorney[i].address_fields()
  - Phone number: durable_powers_of_attorney[i].phone_number
    required: False
  - Is the ${ ordinal(i) } person with a durable power of attorney a minor? (under 18): durable_powers_of_attorney[i].is_minor
    datatype: yesno
  - Is the ${ ordinal(i) } person with a durable power of attorney incompetent?: durable_powers_of_attorney[i].is_incompetent
    datatype: yesno  
  - Relationship to ${ other_parties.familiar() }: durable_powers_of_attorney[i].relationship
---
sets:
  - person_with_care_or_custody[i].name.first
  - person_with_care_or_custody[i].name.last
id: person_with_care_or_custody
question: |
  Name of ${ ordinal(i) } person_with_care_or_custody
fields:
  - Existing person: person_with_care_or_custody[i]
    datatype: object
    choices: relationship_people_choices
    disable others: True
    exclude:
      - person_with_care_or_custody.complete_elements()    
  - code: |
      person_with_care_or_custody[i].name_fields()
  - code: |
      person_with_care_or_custody[i].address_fields()
  - Phone number: person_with_care_or_custody[i].phone_number
    required: False
  - Is the ${ ordinal(i) } person_with_care_or_custody a minor? (under 18): person_with_care_or_custody[i].is_minor
    datatype: yesno
  - Is the ${ ordinal(i) } person_with_care_or_custody incompetent?: person_with_care_or_custody[i].is_incompetent
    datatype: yesno  
  - Relationship to ${ other_parties.familiar() }: person_with_care_or_custody[i].relationship

---
id: relationships
question: |
  Who is related to ${ other_parties.familiar() }?
subquestion: |
  What living family or caretakers does ${ other_parties.familiar() } have?
fields:  
  - Spouse: spouses.has_spouse
    datatype: yesno
  - Children: children.there_are_any
    datatype: yesno
  - How many?: children.target_number
    datatype: integer
    show if: children.there_are_any
  - Parents: parents.there_are_any
    datatype: yesno
  - Siblings: siblings.there_are_any
    datatype: yesno    
  - How many?: siblings.target_number
    datatype: integer
    show if: siblings.there_are_any
  - Caretakers: caretakers.there_are_any
    datatype: yesno
  - ${ other_parties.familiar() } does not have any of these relationships: no_relatives
    datatype: yesno
    uncheck others: True
---
id: spouse name
sets:
  - spouses[0].name.first
  - spouses[0].name.last
question: |
  Who is ${ other_parties.familiar() } married to?
fields:
  - code: |
      spouses[0].name_fields()      
---
id: parents name
sets:
  - parents[0].name.first
  - parents[0].name.last
question: |
  Name of ${ other_parties.familiar() }'s first (living) parent
fields:
  - code: |
      parents[0].name_fields()
---
id: another parent
question: |
  Does ${ other_parties.familiar() } have another living parent?
field: parents.there_is_another
choices:
  - Yes: True
  - No: False
---
id: another sibling
question: |
  Does ${ other_parties.familiar() } have another sibling?
field: siblings.there_is_another
choices:
  - Yes: True
  - No: False  
---
code: |
  # TODO: does it make sense to use plural for consistency? or
  # use a singular `spouse` variable? won't decide yet
  if spouses.has_spouse:
    spouses.target_number = 1
  else:
    spouses.target_number = 0
---    
id: sibling names
sets:
  - siblings[0].name.first
  - siblings[0].name.last
question: |
  % if hasattr(siblings, 'ask_number') and siblings.ask_number and siblings.target_number == 1:
  Sibling's name
  % else:
  Name of oldest sibling
  % endif
fields:
  - code: |
      siblings[0].name_fields()    
---
objects:
  - other_parties[0].principal_residence: ALAddress
---
id: principal residence
sets:
  - other_parties[0].principal_residence.address
  - other_parties[0].principal_residence.city
question: |
  What is ${ other_parties.familiar() }'s **principal residence**?
subquestion: |
  This is normally where ${ other_parties.familiar() } **usually**
  lives.
fields:
  - no label: other_parties[0].principal_residence
    datatype: object_radio
    choices:
      - other_parties[0].address
      - petitioners[0].address
    disable others:
      - other_parties[0].principal_residence.address
      - other_parties[0].principal_residence.city
      - other_parties[0].principal_residence.state
      - other_parties[0].principal_residence.zip
      - other_parties[0].principal_residence.unit
      - other_parties[0].principal_residence.country
    none of the above: An address not listed above      
  - code: |
      other_parties[0].principal_residence.address_fields(show_country=True)
  - When did ${ other_parties[0] } begin living there?: Respondent_address_date
    help: |
      If you do not know, please provide your best guess.
  - Does ${ other_parties[0] } currently live here?: Potential_Residence_current
    datatype: yesnoradio
  - Will ${ other_parties[0] } live here if the guardianship is granted?: Potential_Residence_same
    datatype: yesnoradio
---
id: Respondent incapacity
question: |
  ${ other_parties.familiar() }'s ability to make decisions
fields:
 - Is ${ other_parties.familiar() } intellectually disabled?: Respondent_intellectual_disabled
   datatype: yesnoradio
 - Do you have a completed Medical Certificate?: MedCert_filed
   datatype: yesnoradio
   show if:
     variable: Respondent_intellectual_disabled
     is: False
   help: |
     If ${ other_parties.familiar() } is not intellectually disabled,
     you need to get a medical certificate.
     
     The medical exam needs to be recent. Make sure it was within
     the last 30 days.
 - Do you have a completed Clinical Team Report?: CTR_completed
   datatype: yesnoradio
   show if: Respondent_intellectual_disabled
   help: |
     If ${ other_parties.familiar() } is intellectually disabled,
     you need a report from their clinical team. 
     
     The exam for the clinical team report needs to be within the last
     180 days. You can get a new report from:
     
     - a licensed psychologist
     - registered nurse
     - licensed social worker
 - How is ${ other_parties.familiar() } unable to make important decisions on their own? Be specific about what ${ other_parties.familiar() } can and cannot do.: Incapacity_reasons
   input type: area
   label above field: True
   rows: 6
 - Why does ${ other_parties.familiar() } need a guardian?: Guardianship_reasons
   label above field: True
   input type: area
   rows: 4
---
template: incapacity_reasons_template
subject: |
  What can I say?
content: |
  For example, you might explain that ${ other_parties.familiar() } 
  is not able to talk.

---
id: Review your form before you sign it
continue button field: Guardianship_Assistant_preview_question
question: |
  Review your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page. 
  
   ${ al_user_bundle.as_pdf(key='preview') }
  
  Click the image to open it in a new tab. Click the 'Make changes' button to
  fix any mistakes.
  
  ${ action_button_html(url_action('review_Guardianship_Assistant'), label='Make changes', color='info') } 
  
  Remember to come back to this window to continue and sign your form.
---
# TODO - these will need to be reformatted/input into the correct page
question: |
  Kisha Find a place for these
fields:
  - 'Different address': Different_address_yes
    datatype: yesno
  - 'Respondent family spouse': Respondent_family_spouse_yes
    datatype: yesno
  - 'Respondent family reppayee': Respondent_family_RepPayee_yes
    datatype: yesno
  - 'Respondentfamily minor': RespondentFamily_minor_yes
    datatype: yesno
  - 'Respondent family child': Respondent_family_child_yes
    datatype: yesno
  - 'Respondent family healthproxy': Respondent_family_HealthProxy_yes
    datatype: yesno
  - 'Respondent family incompetent': Respondent_family_incompetent_yes
    datatype: yesno
  - 'Respondent family address street1': Respondent_family_address_street1
    maxlength: 51
  - 'Respondent family guardian': Respondent_family_Guardian_yes
    datatype: yesno
  - 'Respondent family dph': Respondent_family_DPH_yes
    datatype: yesno
  - 'Respondent family nomguardian': Respondent_family_NomGuardian_yes
    datatype: yesno
  - 'Respondent family custody': Respondent_family_custody_yes
    datatype: yesno
  - 'Respondent family address unit': Respondent_family_address_unit
    maxlength: 34
  - 'Respondent family conservator': Respondent_family_Conservator_yes
    datatype: yesno
  - 'Respondent family relative': Respondent_family_Relative_yes
    datatype: yesno
  - 'Other family relationship': other_family_relationship
    maxlength: 27
  - 'Respondent family name': Respondent_family_name
    maxlength: 112
  - 'Respondent family address citystatezip': Respondent_family_address_citystatezip
    maxlength: 34
  - 'Respondent family phone': Respondent_family_phone
    maxlength: 91
  - 'Respondent family2 reppayee': Respondent_family2_RepPayee_yes
    datatype: yesno
  - 'Respondent family2 spouse': Respondent_family2_spouse_yes
    datatype: yesno
  - 'Respondent family2 minor': Respondent_family2_Minor_yes
    datatype: yesno
  - 'Respondent family2 healthproxy': Respondent_family2_HealthProxy_yes
    datatype: yesno
  - 'Respondent family2 incompetent': Respondent_family2_Incompetent_yes
    datatype: yesno
  - 'Respondent family2 child': Respondent_family2_child_yes
    datatype: yesno
  - 'Respondent family2 address street1': Respondent_family2_address_street1
    maxlength: 51
  - 'Respondent family2 dph': Respondent_family2_DPH_yes
    datatype: yesno
  - 'Respondent family2 guardian': Respondent_family2_guardian_yes
    datatype: yesno
  - 'Respondent family2 custody': Respondent_family2_custody_yes
    datatype: yesno
  - 'Respondent family2 nomguardian': Respondent_family2_NomGuardian_yes
    datatype: yesno
  - 'Respondent family2 address unit': Respondent_family2_address_unit
    maxlength: 34
  - 'Respondent family2 conservator': Respondent_family2_Conservator_yes
    datatype: yesno
  - 'Respondent family2 relative': Respondent_family2_Relative_yes
    datatype: yesno
  - 'Other family2 relationship': other_family2_relationship
    maxlength: 27
  - 'Respondent family2 name': Respondent_family2_name
    maxlength: 112
  - 'Respondent family2 address citystatezip': Respondent_family2_address_citystatezip
    maxlength: 34
  - 'Respondent family2 phone': Respondent_family2_phone
    maxlength: 91
  - 'Respondent family3 spouse': Respondent_family3_Spouse_yes
    datatype: yesno
  - 'Respondent family3 reppayee': Respondent_family3_RepPayee_yes
    datatype: yesno
  - 'Respondent family3 minor': Respondent_family3_Minor_yes
    datatype: yesno
  - 'Respondent family3 child': Respondent_family3_Child_yes
    datatype: yesno
  - 'Respondent family3 healthproxy': Respondent_family3_HealthProxy_yes
    datatype: yesno
  - 'Respondent family3 incompetent': Respondent_family3_Incompetent_yes
    datatype: yesno
  - 'Respondent family3 address street1': Respondent_family3_address_street1
    maxlength: 51
  - 'Respondent family3 guardian': Respondent_family3_Guardian_yes
    datatype: yesno
  - 'Respondent family3 dph': Respondent_family3_DPH_yes
    datatype: yesno
  - 'Respondent family3 nomguardian': Respondent_family3_NomGuardian_yes
    datatype: yesno
  - 'Respondent family3 custody': Respondent_family3_custody_yes
    datatype: yesno
  - 'Respondent family3 address unit': Respondent_family3_address_unit
    maxlength: 34
  - 'Respondent family3 conservator': Respondent_family3_Conservator_yes
    datatype: yesno
  - 'Other family3 relationship': other_family3_relationship
    maxlength: 27
  - 'Respondent family3 relative': Respondent_family3_Relative_yes
    datatype: yesno
  - 'Respondent family3 name': Respondent_family3_name
    maxlength: 112
  - 'Respondent family3 address citystatezip': Respondent_family3_address_citystatezip
    maxlength: 34
  - 'Respondent family3 phone': Respondent_family3_phone
    maxlength: 91
  - 'Respondentmolst': RespondentMOLST
    datatype: yesno
  - 'Respondentva': RespondentVA
    datatype: yesno
  - 'Respondentva uncertain': RespondentVA_uncertain
    datatype: yesno
---
id: where respondent lives
question: |
  Where does ${ other_parties[0].familiar() } live?
fields:
  - Approximate date Respondent moved in': movein_date 
  - '${ other_parties[0].familiar() } current address1': Respondent_Current_address1
    maxlength: 27
  - '${ other_parties[0].familiar() }s current state': Respodnent_Current_state
    maxlength: 6
  - 'Respondent current zip': Respondent_Current_zip
    maxlength: 11
  - 'Respondent current city': Respondent_Current_city
    maxlength: 20
  - 'Respondent current address2': Respondent_Current_address2
    maxlength: 15
  - 'Potential residence same': Potential_Residence_same
    datatype: yesno
  - 'Potential residence current': Potential_Residence_current
    datatype: yesno
  - 'Potential residence new': Potential_residence_new
    datatype: yesno
  - 'Respondent new address1': Respondent_New_address1
    maxlength: 27
  - 'Respondent new address state': Respondent_New_address_state
    maxlength: 6
  - 'Respondent new address zip': Respondent_New_address_zip
    maxlength: 11
  - 'Respondent new address city': Respondent_New_address_city
    maxlength: 20
  - 'Respondent new address unit': Respondent_New_address_unit
    maxlength: 15
---
id: Respondent s Relationships
question: |
  People who help care for ${ other_parties[0].familiar() }
subquestion: |
  Does ${ other_parties.familiar() } have any of the following?
  Answer yes if any person, including you, has that role. Someone
  may play more than one role in ${ other_parties.familiar() }'s life.  
fields:
  - 'Currently appointed guardian': Current_Guardian
    datatype: yesnomaybe
  - 'A document nominating a guardian that has not been decided on': Current_GuardianDoc
    datatype: yesnomaybe
  - 'Conservator': Current_Conservator
    datatype: yesnomaybe
  - 'Representative payee for Social Security benefits': RepPayee
    datatype: yesnomaybe
  - 'Healthcare proxy': HealthProxy
    datatype: yesnomaybe
  - 'Durable power of attorney': DPA
    datatype: yesnomaybe
  - Any person who had care or custody of ${ other_parties.familiar() } within the last 60 days: person_with_care_or_custody.there_are_any
    datatype: yesnomaybe
---
code: |
  guardians.there_are_any = Current_Guardian
---
code: |
  nominated_guardian.there_are_any = Current_GuardianDoc
---
code: |
  rep_payees.there_are_any = RepPayee
---
code: |
  healthcare_proxies.there_are_any = HealthProxy
---
code: |
  durable_powers_of_attorney.there_are_any = DPA
---
id: Tell me about finances
question: |
  Tell me about ${ other_parties[0].familiar() }'s finances.
fields:
  - Do they have any assets(bank account, property, insurance, pension, etc.)?: Has_Assets
    datatype: yesnomaybe
  - 'What type of asset is this (bank account, property, insurance, pension, etc.)?': Respondent_Property1
    maxlength: 134 
    help: |
      Do not include sensitive information like names of institutions or account numbers.
    show if: Has_Assets
  - About how much money is this asset worth?: Respondent_Property1_value
    maxlength: 44
    show if: Has_Assets
  - Do they have another asset?: Another_asset
    datatype: yesnomaybe
    show if: Another_asset
  - 'What type of asset is this (bank account, property, insurance, pension, etc.)': Respondent_Property2
    maxlength: 134
    show if: Another_asset
  - 'About How much money is this asset worth': Respondent_Property2_value
    maxlength: 44
    show if: Another_asset
  - Do they have any other assets?: Respondent_asset_attachment_yes
    datatype: yesnomaybe
    show if: Another_asset
# TODO need to add code that says they need to attach extra doc to petition
  - 'About how much money in total do they have in assets': Respondent_Property_total
    maxlength: 22
    show if: Respondent_asset_attachment_yes
  - 'Do they have future income? (ex: paychecks, social security pension, long-term disability, etc)': Has_Income
    datatype: yesnomaybe
  - 'What type of income is this? (ex: paycheck, social security, etc.)': Respondent_Income1
    maxlength: 136
    show if: Has_Income
  - 'About how much money per month is expected from this source of income?': Respondent_Income1_value
    maxlength: 44
    show if: Has_Income
  - Do they have a second source of income?: second_income
    datatype: yesnomaybe
    show if: Has_Income
  - 'What type of income is this? (ex: paycheck, social security, etc.)': Respondent_Income2
    maxlength: 136
    show if: second_income
  - 'About how much money per month is expected from this source of income?': Respondent_Income2_value
    maxlength: 44
    show if: second_income
  - Do they have additional sources of income?: Respondent_income_attachment_yes
    datatype: yesno
    show if: second_incomePetitioner_Signature
# TODO need to add code that says they need to attach extra doc to petition - or ask Quinten about addendum
  - 'About how much money in total do they have in income?': Respondent_Income2_total
    maxlength: 22
    show if: Has_Income
---
id: person who is guardian
question: |
  Who do you want to be ${ other_parties.familiar() }'s guardian?
fields:
  - no label: guardian_who_is
    datatype: radio
    choices:
      - Me (${ users[0]}): petitioner
      - A specific person who is not me: someone_else
      - Someone else the court chooses: suitable_person
      
---
id: Tell me more about who should be appointed guardian
question: |
  Who should the judge to appoint as guardian?
fields:
  - Do you want the judge to appoint **you** as the guardian?: Petitioner_appointee
    datatype: yesnoradio
  - Is there a **specific person** that you want the judge to appoint?: Other_appointee_yes
    datatype: yesnoradio
    show if: 
      variable: Petitioner_appointee 
      is: False
  - note: |
      **Okay**. In that case, this form will ask the judge to appoint a 
      **suitable person**. The judge may choose a name from a list of people who
      are qualified and have told the court they are willing to be guardians in
      cases like this one.
    show if:
      variable: Other_appointee_yes
      is: False
  - 'First Name': Guardian.name.first
    show if: Other_appointee_yes
  - 'Middle Name': Guardian.name.middle
    maxlength: 16
    show if: Other_appointee_yes
  - 'Last name': Guardian.name.last
    maxlength: 60
    show if: Other_appointee_yes    
  - 'Address': Guardian.address.address
    maxlength: 28
    show if: Other_appointee_yes
  - note: |
      **Why** should the person you listed get priority to be 
      ${ other_parties.familiar() }'s guardian?
      
      Check any that apply.
    js show if: |
      val("Petitioner_appointee") || val("Other_appointee_yes")
  - They have a **power of attorney** over ${ other_parties.familiar() }: guardian_poa_yes
    datatype: yesno
    js show if: |
      val("Petitioner_appointee") || val("Other_appointee_yes")    
  - They are ${ other_parties.familiar() }'s **parent**: guardian_parent_yes
    datatype: yesno
    js show if: |
      val("Petitioner_appointee") || val("Other_appointee_yes")    
  - They are **married** to ${ other_parties.familiar() }: guardian_spouse_yes
    datatype: yesno
    js show if: |
      val("Petitioner_appointee") || val("Other_appointee_yes")    
  - They should be chosen as the guardian because: guardian_priority_of_appointment_explanation
    datatype: area
    maxlength: 400
    help: |
      Write a reason that explains why this person is the right person to be 
      chosen as guardian. You do not need to explain why a guardianship is needed.
    js show if: |
      val("Petitioner_appointee") || val("Other_appointee_yes")      
---
question: |
  ...
fields:  
  - 'Guardian appointee not listed': guardian_appointee_not_listed_yes
    datatype: yesno
  - 'Other appointment': Other_appointment_yes
    datatype: yesno
  - 'Other appointment': Other_appointment
    maxlength: 265
  - 'Nominated guardian info': Nominated_Guardian_info
    maxlength: 84
---
id: guardian relationship
question: |
  How is ${ Guardian.familiar() } related to ${ other_parties.familiar() }?
fields:  
  - no label: Guardian_relationship
    maxlength: 24
---
id: Would you like the court to consider appointing a co guardian
question: |
  Would you like the court to consider appointing a co-guardian?
subquestion: |
  More than one person can serve as a guardian. Co-guardians have equal decision-making power.
yesno: coguardian_attachment_yes
---
id: Co-Guardian information
question: |
  Tell us about the proposed Co-Guardian
fields:
  - First Name: coguardian_name_first
  - Middle Initial: coguardian_name_middle
  - Last Name: coguardian_name_last
  - Address: coguardian_address_address
  - Unit: coguardian_address_unit
  - City: coguardian_address_city
  - State: coguardian_address_state
  - Zip: coguardian_address_zip
  - email: coguardian_email
  - Primary phone: CoGuardian_phone
---
id: Additional Co-Guardian Info
question: |
  Tell us more about the proposed Co-Guardian
Fields:
  - Relationship to ${ other_parties[0].name.first}: CoGuardian_relationship
  - Reasons that ${ coguardian_name_first } should be appointed co-guardian: CoGuardian_reasons
---
id: kind of guardianship
question: |
  What kind of guardianship does ${ other_parties.familiar() } need?
subquestion: |
  You can ask for a **limited guardianship** or a **general guardianship**.
  
  You need a good reason to ask for a **general** guardianship. A **general**
  guardian has complete legal control over the person who is being protected. If
  the ${ other_parties.familiar() } can make at least some decisions for themselves
  with help or support, or can express some of their own opinions and preferences
  with help or support, ask for a **limited** guardianship.
fields:
  - Kind of guardianship: guardianship_type
    datatype: radio
    choices:
      - "**Limited** guardianship (recommended)": limited
      - "**General** guardianship": general
  - note: |
      What decisions should the guardian have power over?
  - 'Insurance benefits': insurance_benefits_yes
    datatype: yesno
    show if:
      variable: guardianship_type
      is: limited
  - 'Financial records': financial_records_yes
    datatype: yesno  
    show if:
      variable: guardianship_type
      is: limited
  - Other: Other_appointment_yes
    datatype: yesno
    show if:
      variable: guardianship_type
      is: limited
  - Other limited powers: Other_appointment
    show if: Other_appointment_yes
    datatype: area
    maxlength: 320
  - label: |
      **Why** do you need a **general** guardianship?
      Be specific about why the guardian should have complete control
      over ${ other_parties.familiar() } and ${ other_parties.familiar() } is
      unable to make decisions for themselves even with help or support.
    field: General_Guardianship_reasons
    datatype: area
    maxlength: 178
    label above field: True
    show if: 
      variable: guardianship_type
      is: general
  - note: |    
      Do you need the judge to make any of the orders below?
  - To admit ${ other_parties.familiar() } to a nursing facility: Nursing_facility_yes
    datatype: yesno
  - To revoke ${ other_parties.familiar() }'s healthcare proxy: Revoke_healthproxy_yes
    datatype: yesno    
  - To treat ${ other_parties.familiar() } with anti-psychotic medication: antipsychotic_meds_yes
    datatype: yesno
  - For another treatment or action which may require the judge to substitute their judgment for another person's: other_treatment_yes
    datatype: yesno 
  - 'Substituted judgment reasons': substituted_Judgment_reasons
    maxlength: 219
    show if: other_treatment_yes
  - To waive surety on the bond: Bond_Waiver_yes
    datatype: yesno
  - Why should the judge waive surety on the bond?: surety_waiver_reasons
    datatype: checkboxes
    show if: Bond_Waiver_yes
    choices:
      - ${ other_parties.familiar() } does not have very much money. ${ other_parties.familiar() } cannot afford surety.: Respondent_minimalfunds_yes
      - ${ other_parties.familiar() } has a conservator, or someone has asked for a conservator to be appointed: Conservator_requested_yes
      - Other reason: other
    none of the above: False
  - Other reason to waive surety: Other_Bondwaiver 
    datatype: area
    rows: 2
    maxlength: 160
    show if: surety_waiver_reasons['other']
  - Is there anything **else** you need to ask the judge to order?: Additional_request_yes
    datatype: yesno
  - What other order do you need?: Additional_requests
    maxlength: 108
    datatype: area
    show if: Additional_request_yes
validation code: |
  if guardianship_type == "limited":
    if not any([insurance_benefits_yes,financial_records_yes,Other_appointment_yes]):
      validation_error("Ask for at least one specific power", field="guardianship_type")
---
comment: |
  - 'Conservator requested': Conservator_requested_yes
    datatype: yesno
---
#id: Where will you file this petition
#question: |
#  Where will you file this petition?
#subquestion: |
#  Guardianship Petitions are filed in the Probate and Family Court of the county where Kevin Montoya currently lives, which can be found using the Massachusetts's Courthouse Locator.
#fields:
#  - 'County': County
#    maxlength: 27
---
# TODO - remove these fields from the actual PDF and then delete this section.
id: REMOVE THESE FIELDS
question: |
  REMOVE THESE FIELDS
subquestion: |
  move petition Asset Attachment to the assets page. delete the others
fields:
  - 'Petition assetattachment': Petition_Assetattachment_yes
    datatype: yesno
  - 'Date': Date
    datatype: date
  - 'Date 2': Date_2
    datatype: date
  - 'Date 3': Date_3
    datatype: date
  - 'Date 4': Date_4
    datatype: date
  - 'Date 5': Date_5
    datatype: date
  - 'Date 6': Date_6
    datatype: date
---
id: Attorney Information
question: |
  Attorney Information
subquestion: |
  Complete this information only if you are or have an attorney working on this case.
fields:
  - 'Attorney bbo': Attorney_BBO
    maxlength: 43
---
progress: 100
id: download
event: Guardianship_Assistant_download
question: |
  Your form is ready to download.
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Make changes" button to fix any mistakes. 
  
  ${ action_button_html(url_action('review_Guardianship_Assistant'), label='Make changes', color='info') } 
  
  ${ al_user_bundle.download_list_html() }
  
  ${ al_user_bundle.send_button_html() }
---
objects:
  - Guardianship_Assistant_attachment: ALDocument.using(title="Guardianship Petition", filename="guardianship_petition", enabled=True, has_addendum=False)
---
# TODO list all attachments 
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[Guardianship_Assistant_attachment,Bond_MPC_801_attachment, mpc320verifiedmotionforappttempguardianforincapacitatedperson_attachment, mpc825treatmentplan_attachment], filename="Guardianship Assistant.pdf", title="All forms to download for your records")
  - al_court_bundle: ALDocumentBundle.using(elements=[Guardianship_Assistant_attachment,Bond_MPC_801_attachment, mpc320verifiedmotionforappttempguardianforincapacitatedperson_attachment, mpc825treatmentplan_attachment], filename="Guardianship Assistant.pdf", title="All forms to download for your records")
---
code: |
  if temporary_needed:
    mpc320verifiedmotionforappttempguardianforincapacitatedperson_attachment.enabled = True
  else: 
    mpc320verifiedmotionforappttempguardianforincapacitatedperson_attachment.enabled = False
---
code: |
  if AntiPsychMeds_yes:
    mpc825treatmentplan_attachment.enabled = True
  else: 
    mpc825treatmentplan_attachment.enabled = False
---
attachment:
    variable name: Guardianship_Assistant_attachment[i]
    name: Guardianship Assistant
    filename: Guardianship-Assistant
    skip undefined: True
    pdf template file: Petition_for_Appointment_of_Guardian_for_an_Incapacitated_Person_wFields.pdf
    fields: 
      - "docket_number": ${ docket_numbers[0] }
      - "Respondent_birthdate": ${ other_parties[0].birthdate.format() }
      - "Attorney_address_state": ${ Attorney.address.state }
      - "Respondent_name_first": ${ other_parties[0].familiar() }
      - "Attorney_phone": ${ Attorney.phone_number }
      - "Attorney_address_zip": ${ Attorney.address.zip }
      - "Petitioner_address_city": ${ users[0].address.city }
      - "Guardian_address_state": ${ Guardian.address.state }
      - "Attorney_address_city": ${ Attorney.address.city }
      - "Respondent_name": ${ other_parties[0] }
      - "Respondent_gender": ${ other_parties[0].gender }
      - "Guardian_phone": ${ Guardian.phone_number }
      - "Attorney_address_street": ${ Attorney.address.address }
      - "Guardian_name_last": ${ Guardian.name.last }
      - "Respondent_name_last": ${ other_parties[0].name.last }
      - "Petitioner_address_zip": ${ users[0].address.zip }
      - "Guardian_address_zip": ${ Guardian.address.zip }
      - "Petitioner_name_last": ${ users[0].name.last }
      - "Guardian_address_unit": ${ Guardian.address.unit }
      - "Guardian_e-mail": ${ Guardian.email }
      - "Respondent_phone": ${ other_parties[0].phone_number }
      - "Petitioner_name_first": ${ users[0].name.first }
      - "Petitioner_phone": ${ users[0].phone_number }
      - "Attorney_email": ${ Attorney.email }
      - "Guardian_address_city": ${ Guardian.address.city }
      - "Guardian_name_first": ${ Guardian.name.first }
      - "Attorney_address_unit": ${ Attorney.address.unit }
      - "Attorney_name": ${ Attorney }
      - "County": ${ trial_court.address.county }
      - "Respondent_name_middleinitial": ${ other_parties[0].name.middle_initial() }
      - "Language_english_yes": ${ primary_language == 'English' }
      - "Langauge_other_yes": ${ primary_language == 'Other' }
      - "Other_language": |
          % if primary_language == 'Other':
          ${ primary_language_other }
          % endif
      - "Respondent_Age": ${ other_parties[0].age_in_years() }
      - "Respondent_address_City": ${ other_parties[0].address.city }
      - "Respondent_Address_street": ${ other_parties[0].address.address }
      - "Respondent_Address_unit": ${ other_parties[0].address.unit }
      - "Respondent_address_State": ${ other_parties[0].address.state }
      - "Respondent_address_Zip": ${ other_parties[0].address.zip }
      - "Respondent_address_date": ${ Respondent_address_date }
      - "Same_address_yes": ${ Same_address_yes }
      - "Different_address_yes": ${ Different_address_yes }
      - "Respondent_Current_address1": ${ Respondent_Current_address1 }
      - "Respodnent_Current_state": ${ Respodnent_Current_state }
      - "Respondent_Current_zip": ${ Respondent_Current_zip }
      - "Respondent_Current_city": ${ Respondent_Current_city }
      - "Respondent_Current_address2": ${ Respondent_Current_address2 }
      - "Potential_Residence_same": ${ Potential_Residence_same }
      - "Potential_Residence_current": ${ Potential_Residence_current }
      - "Potential_residence_new": ${ Potential_residence_new }
      - "Respondent_New_address1": ${ Respondent_New_address1 }
      - "Respondent_New_address_state": ${ Respondent_New_address_state }
      - "Respondent_New_address_zip": ${ Respondent_New_address_zip }
      - "Respondent_New_address_city": ${ Respondent_New_address_city }
      - "Respondent_New_address_unit": ${ Respondent_New_address_unit }
      - "Respondent_intellectual_disabled_yes": ${ Respondent_intellectual_disabled }
      - "Respondent_intellectual_disabled_no": ${ not Respondent_intellectual_disabled }
      - "Petitioner_name_MI": ${ users[0].name.middle }
      - "Petitioner_Address_street1": ${ users[0].address.address }
      - "Petitioner_address_State": ${ users[0].address.state }
      - "Petitioner_Address_unit": ${ users[0].address.unit }
      - "Petitioner_relationship": ${ Petitioner_relationship }
      - "users[0].email": ${ users[0].email }
      - "Petitioner_interest_list": ${ Petitioner_interest_list }
      - "copetitioner_attachment_yes": ${ copetitioner_attachment_yes }
      - "Petitioner_appointee_yes": ${ Petitioner_appointee }
      - "petitioner_appointee_no": ${ not Petitioner_appointee }
      - "Other_appointee_yes": ${ Other_appointee_yes }
      - "Guardian_name_MI": ${ Guardian.name.middle }
      - "Guardian_Address_Street": ${ Guardian.address.address }
      - "Guardian_relationship": ${ Guardian_relationship }
      - "coguardian_attachment_yes": ${ coguardian_attachment_yes }
      - "guardian_poa_yes": ${ guardian_poa_yes }
      - "guardian_parent_yes": ${ guardian_parent_yes }
      - "guardian_spouse_yes": ${ guardian_spouse_yes }
      - "guardian_appointee_not_listed_yes": ${ guardian_appointee_not_listed_yes }
      - "Limited_Guardian_yes": ${ guardianship_type == "limited" }
      - "insurance_benefits_yes": |
          % if guardianship_type == "limited":
          ${ insurance_benefits_yes }
          % endif
      - "financial_records_yes": |
          % if guardianship_type == "limited":
          ${ financial_records_yes }
          % endif
      - "Other_appointment_yes": ${ Other_appointment_yes }
      - "Other_appointment": ${ Other_appointment }
      - "General_Guardian_yes": ${ guardianship_type == "general" }
      - "General_Guardianship_reasons": ${ General_Guardianship_reasons }
      - "MedCert_filed_yes": ${ MedCert_filed }
      - "MedCert_filed_no": ${ not MedCert_filed }
      - "Guardianship_reasons": ${ Guardianship_reasons }
      - "Incapacity_reasons": ${ Incapacity_reasons }
      - "Respondent_family_spouse_yes": ${ Respondent_family_spouse_yes }
      - "Respondent_family_RepPayee_yes": ${ Respondent_family_RepPayee_yes }
      - "RespondentFamily_minor_yes": ${ RespondentFamily_minor_yes }
      - "Respondent_family_child_yes": ${ Respondent_family_child_yes }
      - "Respondent_family_HealthProxy_yes": ${ Respondent_family_HealthProxy_yes }
      - "Respondent_family_incompetent_yes": ${ Respondent_family_incompetent_yes }
      - "Respondent_family_address_street1": ${ Respondent_family_address_street1 }
      - "Respondent_family_Guardian_yes": ${ Respondent_family_Guardian_yes }
      - "Respondent_family_DPH_yes": ${ Respondent_family_DPH_yes }
      - "Respondent_family_NomGuardian_yes": ${ Respondent_family_NomGuardian_yes }
      - "Respondent_family_custody_yes": ${ Respondent_family_custody_yes }
      - "Respondent_family_address_unit": ${ Respondent_family_address_unit }
      - "Respondent_family_Conservator_yes": ${ Respondent_family_Conservator_yes }
      - "Respondent_family_Relative_yes": ${ Respondent_family_Relative_yes }
      - "other_family_relationship": ${ other_family_relationship }
      - "Respondent_family_name": ${ Respondent_family_name }
      - "Respondent_family_address_citystatezip": ${ Respondent_family_address_citystatezip }
      - "Respondent_family_phone": ${ Respondent_family_phone }
      - "Respondent_family2_RepPayee_yes": ${ Respondent_family2_RepPayee_yes }
      - "Respondent_family2_spouse_yes": ${ Respondent_family2_spouse_yes }
      - "Respondent_family2_Minor_yes": ${ Respondent_family2_Minor_yes }
      - "Respondent_family2_HealthProxy_yes": ${ Respondent_family2_HealthProxy_yes }
      - "Respondent_family2_Incompetent_yes": ${ Respondent_family2_Incompetent_yes }
      - "Respondent_family2_child_yes": ${ Respondent_family2_child_yes }
      - "Respondent_family2_address_street1": ${ Respondent_family2_address_street1 }
      - "Respondent_family2_DPH_yes": ${ Respondent_family2_DPH_yes }
      - "Respondent_family2_guardian_yes": ${ Respondent_family2_guardian_yes }
      - "Respondent_family2_custody_yes": ${ Respondent_family2_custody_yes }
      - "Respondent_family2_NomGuardian_yes": ${ Respondent_family2_NomGuardian_yes }
      - "Respondent_family2_address_unit": ${ Respondent_family2_address_unit }
      - "Respondent_family2_Conservator_yes": ${ Respondent_family2_Conservator_yes }
      - "Respondent_family2_Relative_yes": ${ Respondent_family2_Relative_yes }
      - "other_family2_relationship": ${ other_family2_relationship }
      - "Respondent_family2_name": ${ Respondent_family2_name }
      - "Respondent_family2_address_citystatezip": ${ Respondent_family2_address_citystatezip }
      - "Respondent_family2_phone": ${ Respondent_family2_phone }
      - "Respondent_family3_Spouse_yes": ${ Respondent_family3_Spouse_yes }
      - "Respondent_family3_RepPayee_yes": ${ Respondent_family3_RepPayee_yes }
      - "Respondent_family3_Minor_yes": ${ Respondent_family3_Minor_yes }
      - "Respondent_family3_Child_yes": ${ Respondent_family3_Child_yes }
      - "Respondent_family3_HealthProxy_yes": ${ Respondent_family3_HealthProxy_yes }
      - "Respondent_family3_Incompetent_yes": ${ Respondent_family3_Incompetent_yes }
      - "Respondent_family3_address_street1": ${ Respondent_family3_address_street1 }
      - "Respondent_family3_Guardian_yes": ${ Respondent_family3_Guardian_yes }
      - "Respondent_family3_DPH_yes": ${ Respondent_family3_DPH_yes }
      - "Respondent_family3_NomGuardian_yes": ${ Respondent_family3_NomGuardian_yes }
      - "Respondent_family3_custody_yes": ${ Respondent_family3_custody_yes }
      - "Respondent_family3_address_unit": ${ Respondent_family3_address_unit }
      - "Respondent_family3_Conservator_yes": ${ Respondent_family3_Conservator_yes }
      - "other_family3_relationship": ${ other_family3_relationship }
      - "Respondent_family3_Relative_yes": ${ Respondent_family3_Relative_yes }
      - "Respondent_family3_name": ${ Respondent_family3_name }
      - "Respondent_family3_address_citystatezip": ${ Respondent_family3_address_citystatezip }
      - "Respondent_family3_phone": ${ Respondent_family3_phone }
      - "Current_Guardian_Attached_yes": ${ Current_Guardian_Attached }
      - "Current_Guardian_attached_no": ${ not Current_Guardian_Attached }
      - "Current_Guardian_yes": ${ Current_Guardian }
      - "Current_Guardian_no": ${ not Current_Guardian }
      - "Current_Guardian_Uncertain": ${ Current_Guardian is None }
      - "Current_Guardian_info": ${ Current_Guardian_info }
      - "GuardianDoc_attached_yes": ${ GuardianDoc_attached }
      - "GuardianDoc_attached_no": ${ not GuardianDoc_attached }
      - "Current_GuardianDoc_yes": ${ Current_GuardianDoc }
      - "Current_GuardianDoc_no": ${ not Current_GuardianDoc }
      - "GuardianDoc_uncertain": ${ GuardianDoc is None }
      - "Nominated_Guardian_info": ${ Nominated_Guardian_info }
      - "Current_Conservator_attached_yes": ${ Current_Conservator_attached }
      - "Current_Conservator_attached_no": ${ not Current_Conservator_attached }
      - "Current_Conservator_yes": ${ Current_Conservator }
      - "Current_Conservator_no": ${ not Current_Conservator }
      - "Current_Conservator_uncertain": ${ Current_Conservator is None }
      - "Current_Conservator_info": ${ Current_Conservator_info }
      - "RepPayee_attached_yes": ${ RepPayee_attached }
      - "RepPayee_attached_no": ${ not RepPayee_attached }
      - "RepPayee_yes": ${ RepPayee }
      - "RepPayee_no": ${ not RepPayee }
      - "RepPayee_uncertain": ${ RepPayee is None }
      - "RepPayee_info": ${ RepPayee_info }
      - "HealthProxy_attached_yes": ${ HealthProxy_attached }
      - "HealthProxy_attached_no": ${ not HealthProxy_attached }
      - "HealthProxy_yes": ${ HealthProxy }
      - "HealthProxy_no": ${ not HealthProxy }
      - "HealthProxy_uncertain": ${ HealthProxy is None }
      - "HealthProxy_info": ${ HealthProxy_info }
      - "DPA_attached_yes": ${ DPA_attached }
      - "DPA_attached_no": ${ not DPA_attached }
      - "DPA_yes": ${ DPA }
      - "DPA_no": ${ not DPA }
      - "DPA_uncertain": ${ DPA is None }
      - "DPA_info": ${ DPA_info }
      - "RespondentMOLST_yes": ${ RespondentMOLST }
      - "RespondentMOLST_no": ${ not RespondentMOLST }
      - "RespondentVA_yes": ${ RespondentVA }
      - "RespondentVA_no": ${ not RespondentVA }
      - "RespondentVA_uncertain": ${ RespondentVA is None }
      - "Has_Assets_uncertain": ${ Has_Assets is None }
      - "Has_Assets_yes": ${ Has_Assets }
      - "Has_Assets_no": ${ not Has_Assets }
      - "Respondent_Property1": ${ Respondent_Property1 }
      - "Respondent_Property1_value": ${ Respondent_Property1_value }
      - "Respondent_Property2": ${ Respondent_Property2 }
      - "Respondent_Property2_value": ${ Respondent_Property2_value }
      - "Respondent_Property_total": ${ Respondent_Property_total }
      - "Petition_Assetattachment_yes": ${ Petition_Assetattachment_yes }
      - "Has_Income_yes": ${ Has_Income }
      - "Has_Income_no": ${ not Has_Income }
      - "Has_Income_uncertain": ${ Has_Income is None }
      - "Respondent_Income1": ${ Respondent_Income1 }
      - "Respondent_Income1_value": ${ Respondent_Income1_value }
      - "Respondent_Income2": ${ Respondent_Income2 }
      - "Respondent_Income2_value": ${ Respondent_Income2_value }
      - "Respondent_Income2_total": ${ Respondent_Income2_total }
      - "Respondent_income_attachment_yes": ${ Respondent_income_attachment_yes }
      - "additional_specific_court_authorization": ${ Nursing_facility_yes or antipsychotic_meds_yes or other_treatment_yes or Revoke_healthproxy_yes }
      - "Nursing_facility_yes": ${ Nursing_facility_yes }
      - "antipsychotic_meds_yes": ${ antipsychotic_meds_yes }
      - "other_treatment_yes": ${ other_treatment_yes }
      - "substituted_Judgment_reasons": ${ substituted_Judgment_reasons }
      - "Revoke_healthproxy_yes": ${ Revoke_healthproxy_yes }
      - "Petitioner_appointed_yes_1": ${ Petitioner_appointed_yes_1 }
      - "Petitioner_appointee_no_1": ${ Petitioner_appointee_no_1 }
      - "Guardian_name_last_1": ${ Guardian.name.last }
      - "Guardian_name_first_1": ${ Guardian.name.first }
      - "Guardian_name_MI_1": ${ Guardian.name.middle }
      - "Other_appointee_yes_1": ${ Other_appointee_yes_1 }
      - "Limited_Guardian_yes_2": ${ Limited_Guardian_yes_2 }
      - "General_Guardian_yes_2": ${ General_Guardian_yes_2 }
      - "Bond_Waiver_yes": ${ Bond_Waiver_yes }
      - "Respondent_minimalfunds_yes": ${ surety_waiver_reasons['Respondent_minimalfunds_yes'] }
      - "Conservator_requested_yes": |
          % if Bond_Waiver_yes:
          ${ surety_waiver_reasons['Conservator_requested_yes'] }
          % endif
      - "Other_bondwaiver_yes": |
          % if Bond_Waiver_yes:
          ${ surety_waiver_reasons['other'] }
          % endif
      - "Other_Bondwaiver": |
          % if Bond_Waiver_yes and surety_waiver_reasons['other']:
          ${ Other_Bondwaiver }
          % endif
      - "Additional_request_yes": ${ Additional_request_yes }
      - "Additional_requests": ${ Additional_requests }
      - "Date": ${ Date }
      - "Date_2": ${ Date_2 }
      - "Date_3": ${ Date_3 }
      - "Date_4": ${ Date_4 }
      - "Date_5": ${ Date_5 }
      - "Date_6": ${ Date_6 }
      - "Attorney_BBO": ${ Attorney_BBO }
      - "Petitioner_Signature": ${ users[0].signature_if_final(i) }
      - "Copetitioner_Signature": ${ users[1].signature_if_final(i) }
      - "Attorney_signature": ${ Attorney.signature_if_final(i) }
---
# id: Guardianship_Assistant review screen
# event: review_Guardianship_Assistant
# question: |
#   Review Screen
# subquestion: |
#   Edit your answers below
# review: 
#   - Edit: County
#     button: |
#       **County**:
#       ${ County }
#   - Edit: Language_english_yes
#     button: |
#       **Language english**:
#       ${ word(yesno(Language_english_yes)) }
#   - Edit: Langauge_other_yes
#     button: |
#       **Langauge other**:
#       ${ word(yesno(Langauge_other_yes)) }
#   - Edit: Other_language
#     button: |
#       **Other language**:
#       ${ Other_language }
#   - Edit: other_parties[0].birthdate
#     button: |
#       **Respondent's birthdate**:
#       ${ other_parties[0].birthdate }
#   - Edit: other_parties[0].address.city
#     button: |
#       **Respondent address city**:
#       ${ other_parties[0].address.city }
#   - Edit: other_parties[0].address.address
#     button: |
#       **Respondent address street**:
#       ${ other_parties[0].address.address }
#   - Edit: other_parties[0].address.unit
#     button: |
#       **Respondent address unit**:
#       ${ other_parties[0].address.unit }
#   - Edit: other_parties[0].address.state
#     button: |
#       **Respondent address state**:
#       ${ other_parties[0].address.state }
#   - Edit: other_parties[0].address.zip
#     button: |
#       **Respondent address zip**:
#       ${ other_parties[0].address.zip }
#   - Edit: Respondent_address_date
#     button: |
#       **Date of Respondent address**:
#       ${ Respondent_address_date }
#   - Edit: Same_address_yes
#     button: |
#       **Same address**:
#       ${ word(yesno(Same_address_yes)) }
#   - Edit: Different_address_yes
#     button: |
#       **Different address**:
#       ${ word(yesno(Different_address_yes)) }
#   - Edit: Respondent_Current_address1
#     button: |
#       **Respondent current address1**:
#       ${ Respondent_Current_address1 }
#   - Edit: Respodnent_Current_state
#     button: |
#       **Respodnent current state**:
#       ${ Respodnent_Current_state }
#   - Edit: Respondent_Current_zip
#     button: |
#       **Respondent current zip**:
#       ${ Respondent_Current_zip }
#   - Edit: Respondent_Current_city
#     button: |
#       **Respondent current city**:
#       ${ Respondent_Current_city }
#   - Edit: Respondent_Current_address2
#     button: |
#       **Respondent current address2**:
#       ${ Respondent_Current_address2 }
#   - Edit: Potential_Residence_same
#     button: |
#       **Potential residence same**:
#       ${ word(yesno(Potential_Residence_same)) }
#   - Edit: Potential_Residence_current
#     button: |
#       **Potential residence current**:
#       ${ word(yesno(Potential_Residence_current)) }
#   - Edit: Potential_residence_new
#     button: |
#       **Potential residence new**:
#       ${ word(yesno(Potential_residence_new)) }
#   - Edit: Respondent_New_address1
#     button: |
#       **Respondent new address1**:
#       ${ Respondent_New_address1 }
#   - Edit: Respondent_New_address_state
#     button: |
#       **Respondent new address state**:
#       ${ Respondent_New_address_state }
#   - Edit: Respondent_New_address_zip
#     button: |
#       **Respondent new address zip**:
#       ${ Respondent_New_address_zip }
#   - Edit: Respondent_New_address_city
#     button: |
#       **Respondent new address city**:
#       ${ Respondent_New_address_city }
#   - Edit: Respondent_New_address_unit
#     button: |
#       **Respondent new address unit**:
#       ${ Respondent_New_address_unit }
#   - Edit: Respondent_intellectual_disabled
#     button: |
#       **Respondent intellectual disabled**:
#       ${ word(yesno(Respondent_intellectual_disabled)) }
#   - Edit: users[0].name.middle
#     button: |
#       **Petitioner name mi**:
#       ${ users[0].name.middle }
#   - Edit: users[0].address.address
#     button: |
#       **Petitioner address street1**:
#       ${ users[0].address.address }
#   - Edit: users[0].address.state
#     button: |
#       **Petitioner address state**:
#       ${ users[0].address.state }
#   - Edit: users[0].address.unit
#     button: |
#       **Petitioner address unit**:
#       ${ users[0].address.unit }
#   - Edit: Petitioner_relationship
#     button: |
#       **Petitioner relationship**:
#       ${ Petitioner_relationship }
#   - Edit: users[0].email
#     button: |
#       **Petitioner email**:
#       ${ users[0].email }
#   - Edit: Petitioner_interest_list
#     button: |
#       **Petitioner interest list**:
#       ${ Petitioner_interest_list }
#   - Edit: copetitioner_attachment_yes
#     button: |
#       **Copetitioner attachment**:
#       ${ word(yesno(copetitioner_attachment_yes)) }
#   - Edit: Petitioner_appointee
#     button: |
#       **Petitioner appointee**:
#       ${ word(yesno(Petitioner_appointee)) }
#   - Edit: Other_appointee_yes
#     button: |
#       **Other appointee**:
#       ${ word(yesno(Other_appointee_yes)) }
#   - Edit: Guardian.name.middle
#     button: |
#       **Guardian name mi**:
#       ${ Guardian.name.middle }
#   - Edit: Guardian.address.address
#     button: |
#       **Guardian address street**:
#       ${ Guardian.address.address }
#   - Edit: Guardian_relationship
#     button: |
#       **Guardian relationship**:
#       ${ Guardian_relationship }
#   - Edit: coguardian_attachment_yes
#     button: |
#       **Coguardian attachment**:
#       ${ word(yesno(coguardian_attachment_yes)) }
#   - Edit: guardian_poa_yes
#     button: |
#       **Guardian poa**:
#       ${ word(yesno(guardian_poa_yes)) }
#   - Edit: guardian_parent_yes
#     button: |
#       **Guardian parent**:
#       ${ word(yesno(guardian_parent_yes)) }
#   - Edit: guardian_spouse_yes
#     button: |
#       **Guardian spouse**:
#       ${ word(yesno(guardian_spouse_yes)) }
#   - Edit: guardian_appointee_not_listed_yes
#     button: |
#       **Guardian appointee not listed**:
#       ${ word(yesno(guardian_appointee_not_listed_yes)) }
#   - Edit: Limited_Guardian_yes
#     button: |
#       **Limited guardian**:
#       ${ word(yesno(Limited_Guardian_yes)) }
#   - Edit: insurance_benefits_yes
#     button: |
#       **Insurance benefits**:
#       ${ word(yesno(insurance_benefits_yes)) }
#   - Edit: financial_records_yes
#     button: |
#       **Financial records**:
#       ${ word(yesno(financial_records_yes)) }
#   - Edit: Other_appointment_yes
#     button: |
#       **Other appointment**:
#       ${ word(yesno(Other_appointment_yes)) }
#   - Edit: Other_appointment
#     button: |
#       **Other appointment**:
#       ${ Other_appointment }
#   - Edit: General_Guardian_yes
#     button: |
#       **General guardian**:
#       ${ word(yesno(General_Guardian_yes)) }
#   - Edit: General_Guardianship_reasons
#     button: |
#       **General guardianship reasons**:
#       ${ General_Guardianship_reasons }
#   - Edit: MedCert_filed
#     button: |
#       **Medcert filed**:
#       ${ word(yesno(MedCert_filed)) }
#   - Edit: Guardianship_reasons
#     button: |
#       **Guardianship reasons**:
#       ${ Guardianship_reasons }
#   - Edit: Incapacity_reasons
#     button: |
#       **Incapacity reasons**:
#       ${ Incapacity_reasons }
#   - Edit: Respondent_family_spouse_yes
#     button: |
#       **Respondent family spouse**:
#       ${ word(yesno(Respondent_family_spouse_yes)) }
#   - Edit: Respondent_family_RepPayee_yes
#     button: |
#       **Respondent family reppayee**:
#       ${ word(yesno(Respondent_family_RepPayee_yes)) }
#   - Edit: RespondentFamily_minor_yes
#     button: |
#       **Respondentfamily minor**:
#       ${ word(yesno(RespondentFamily_minor_yes)) }
#   - Edit: Respondent_family_child_yes
#     button: |
#       **Respondent family child**:
#       ${ word(yesno(Respondent_family_child_yes)) }
#   - Edit: Respondent_family_HealthProxy_yes
#     button: |
#       **Respondent family healthproxy**:
#       ${ word(yesno(Respondent_family_HealthProxy_yes)) }
#   - Edit: Respondent_family_incompetent_yes
#     button: |
#       **Respondent family incompetent**:
#       ${ word(yesno(Respondent_family_incompetent_yes)) }
#   - Edit: Respondent_family_address_street1
#     button: |
#       **Respondent family address street1**:
#       ${ Respondent_family_address_street1 }
#   - Edit: Respondent_family_Guardian_yes
#     button: |
#       **Respondent family guardian**:
#       ${ word(yesno(Respondent_family_Guardian_yes)) }
#   - Edit: Respondent_family_DPH_yes
#     button: |
#       **Respondent family dph**:
#       ${ word(yesno(Respondent_family_DPH_yes)) }
#   - Edit: Respondent_family_NomGuardian_yes
#     button: |
#       **Respondent family nomguardian**:
#       ${ word(yesno(Respondent_family_NomGuardian_yes)) }
#   - Edit: Respondent_family_custody_yes
#     button: |
#       **Respondent family custody**:
#       ${ word(yesno(Respondent_family_custody_yes)) }
#   - Edit: Respondent_family_address_unit
#     button: |
#       **Respondent family address unit**:
#       ${ Respondent_family_address_unit }
#   - Edit: Respondent_family_Conservator_yes
#     button: |
#       **Respondent family conservator**:
#       ${ word(yesno(Respondent_family_Conservator_yes)) }
#   - Edit: Respondent_family_Relative_yes
#     button: |
#       **Respondent family relative**:
#       ${ word(yesno(Respondent_family_Relative_yes)) }
#   - Edit: other_family_relationship
#     button: |
#       **Other family relationship**:
#       ${ other_family_relationship }
#   - Edit: Respondent_family_name
#     button: |
#       **Respondent family name**:
#       ${ Respondent_family_name }
#   - Edit: Respondent_family_address_citystatezip
#     button: |
#       **Respondent family address citystatezip**:
#       ${ Respondent_family_address_citystatezip }
#   - Edit: Respondent_family_phone
#     button: |
#       **Respondent family phone**:
#       ${ Respondent_family_phone }
#   - Edit: Respondent_family2_RepPayee_yes
#     button: |
#       **Respondent family2 reppayee**:
#       ${ word(yesno(Respondent_family2_RepPayee_yes)) }
#   - Edit: Respondent_family2_spouse_yes
#     button: |
#       **Respondent family2 spouse**:
#       ${ word(yesno(Respondent_family2_spouse_yes)) }
#   - Edit: Respondent_family2_Minor_yes
#     button: |
#       **Respondent family2 minor**:
#       ${ word(yesno(Respondent_family2_Minor_yes)) }
#   - Edit: Respondent_family2_HealthProxy_yes
#     button: |
#       **Respondent family2 healthproxy**:
#       ${ word(yesno(Respondent_family2_HealthProxy_yes)) }
#   - Edit: Respondent_family2_Incompetent_yes
#     button: |
#       **Respondent family2 incompetent**:
#       ${ word(yesno(Respondent_family2_Incompetent_yes)) }
#   - Edit: Respondent_family2_child_yes
#     button: |
#       **Respondent family2 child**:
#       ${ word(yesno(Respondent_family2_child_yes)) }
#   - Edit: Respondent_family2_address_street1
#     button: |
#       **Respondent family2 address street1**:
#       ${ Respondent_family2_address_street1 }
#   - Edit: Respondent_family2_DPH_yes
#     button: |
#       **Respondent family2 dph**:
#       ${ word(yesno(Respondent_family2_DPH_yes)) }
#   - Edit: Respondent_family2_guardian_yes
#     button: |
#       **Respondent family2 guardian**:
#       ${ word(yesno(Respondent_family2_guardian_yes)) }
#   - Edit: Respondent_family2_custody_yes
#     button: |
#       **Respondent family2 custody**:
#       ${ word(yesno(Respondent_family2_custody_yes)) }
#   - Edit: Respondent_family2_NomGuardian_yes
#     button: |
#       **Respondent family2 nomguardian**:
#       ${ word(yesno(Respondent_family2_NomGuardian_yes)) }
#   - Edit: Respondent_family2_address_unit
#     button: |
#       **Respondent family2 address unit**:
#       ${ Respondent_family2_address_unit }
#   - Edit: Respondent_family2_Conservator_yes
#     button: |
#       **Respondent family2 conservator**:
#       ${ word(yesno(Respondent_family2_Conservator_yes)) }
#   - Edit: Respondent_family2_Relative_yes
#     button: |
#       **Respondent family2 relative**:
#       ${ word(yesno(Respondent_family2_Relative_yes)) }
#   - Edit: other_family2_relationship
#     button: |
#       **Other family2 relationship**:
#       ${ other_family2_relationship }
#   - Edit: Respondent_family2_name
#     button: |
#       **Respondent family2 name**:
#       ${ Respondent_family2_name }
#   - Edit: Respondent_family2_address_citystatezip
#     button: |
#       **Respondent family2 address citystatezip**:
#       ${ Respondent_family2_address_citystatezip }
#   - Edit: Respondent_family2_phone
#     button: |
#       **Respondent family2 phone**:
#       ${ Respondent_family2_phone }
#   - Edit: Respondent_family3_Spouse_yes
#     button: |
#       **Respondent family3 spouse**:
#       ${ word(yesno(Respondent_family3_Spouse_yes)) }
#   - Edit: Respondent_family3_RepPayee_yes
#     button: |
#       **Respondent family3 reppayee**:
#       ${ word(yesno(Respondent_family3_RepPayee_yes)) }
#   - Edit: Respondent_family3_Minor_yes
#     button: |
#       **Respondent family3 minor**:
#       ${ word(yesno(Respondent_family3_Minor_yes)) }
#   - Edit: Respondent_family3_Child_yes
#     button: |
#       **Respondent family3 child**:
#       ${ word(yesno(Respondent_family3_Child_yes)) }
#   - Edit: Respondent_family3_HealthProxy_yes
#     button: |
#       **Respondent family3 healthproxy**:
#       ${ word(yesno(Respondent_family3_HealthProxy_yes)) }
#   - Edit: Respondent_family3_Incompetent_yes
#     button: |
#       **Respondent family3 incompetent**:
#       ${ word(yesno(Respondent_family3_Incompetent_yes)) }
#   - Edit: Respondent_family3_address_street1
#     button: |
#       **Respondent family3 address street1**:
#       ${ Respondent_family3_address_street1 }
#   - Edit: Respondent_family3_Guardian_yes
#     button: |
#       **Respondent family3 guardian**:
#       ${ word(yesno(Respondent_family3_Guardian_yes)) }
#   - Edit: Respondent_family3_DPH_yes
#     button: |
#       **Respondent family3 dph**:
#       ${ word(yesno(Respondent_family3_DPH_yes)) }
#   - Edit: Respondent_family3_NomGuardian_yes
#     button: |
#       **Respondent family3 nomguardian**:
#       ${ word(yesno(Respondent_family3_NomGuardian_yes)) }
#   - Edit: Respondent_family3_custody_yes
#     button: |
#       **Respondent family3 custody**:
#       ${ word(yesno(Respondent_family3_custody_yes)) }
#   - Edit: Respondent_family3_address_unit
#     button: |
#       **Respondent family3 address unit**:
#       ${ Respondent_family3_address_unit }
#   - Edit: Respondent_family3_Conservator_yes
#     button: |
#       **Respondent family3 conservator**:
#       ${ word(yesno(Respondent_family3_Conservator_yes)) }
#   - Edit: other_family3_relationship
#     button: |
#       **Other family3 relationship**:
#       ${ other_family3_relationship }
#   - Edit: Respondent_family3_Relative_yes
#     button: |
#       **Respondent family3 relative**:
#       ${ word(yesno(Respondent_family3_Relative_yes)) }
#   - Edit: Respondent_family3_name
#     button: |
#       **Respondent family3 name**:
#       ${ Respondent_family3_name }
#   - Edit: Respondent_family3_address_citystatezip
#     button: |
#       **Respondent family3 address citystatezip**:
#       ${ Respondent_family3_address_citystatezip }
#   - Edit: Respondent_family3_phone
#     button: |
#       **Respondent family3 phone**:
#       ${ Respondent_family3_phone }
#   - Edit: Current_Guardian_Attached
#     button: |
#       **Current guardian attached**:
#       ${ word(yesno(Current_Guardian_Attached)) }
#   - Edit: Current_Guardian
#     button: |
#       **Current guardian**:
#       ${ word(yesno(Current_Guardian)) }
#   - Edit: Current_Guardian_Uncertain
#     button: |
#       **Current guardian uncertain**:
#       ${ word(yesno(Current_Guardian_Uncertain)) }
#   - Edit: Current_Guardian_info
#     button: |
#       **Current guardian info**:
#       ${ Current_Guardian_info }
#   - Edit: GuardianDoc_attached
#     button: |
#       **Guardiandoc attached**:
#       ${ word(yesno(GuardianDoc_attached)) }
#   - Edit: Current_GuardianDoc
#     button: |
#       **Current guardiandoc**:
#       ${ word(yesno(Current_GuardianDoc)) }
#   - Edit: GuardianDoc_uncertain
#     button: |
#       **Guardiandoc uncertain**:
#       ${ word(yesno(GuardianDoc_uncertain)) }
#   - Edit: Nominated_Guardian_info
#     button: |
#       **Nominated guardian info**:
#       ${ Nominated_Guardian_info }
#   - Edit: Current_Conservator_attached
#     button: |
#       **Current conservator attached**:
#       ${ word(yesno(Current_Conservator_attached)) }
#   - Edit: Current_Conservator
#     button: |
#       **Current conservator**:
#       ${ word(yesno(Current_Conservator)) }
#   - Edit: Current_Conservator_uncertain
#     button: |
#       **Current conservator uncertain**:
#       ${ word(yesno(Current_Conservator_uncertain)) }
#   - Edit: Current_Conservator_info
#     button: |
#       **Current conservator info**:
#       ${ Current_Conservator_info }
#   - Edit: RepPayee_attached
#     button: |
#       **Reppayee attached**:
#       ${ word(yesno(RepPayee_attached)) }
#   - Edit: RepPayee
#     button: |
#       **Reppayee**:
#       ${ word(yesno(RepPayee)) }
#   - Edit: RepPayee_uncertain
#     button: |
#       **Reppayee uncertain**:
#       ${ word(yesno(RepPayee_uncertain)) }
#   - Edit: RepPayee_info
#     button: |
#       **Reppayee info**:
#       ${ RepPayee_info }
#   - Edit: HealthProxy_attached
#     button: |
#       **Healthproxy attached**:
#       ${ word(yesno(HealthProxy_attached)) }
#   - Edit: HealthProxy
#     button: |
#       **Healthproxy**:
#       ${ word(yesno(HealthProxy)) }
#   - Edit: HealthProxy_uncertain
#     button: |
#       **Healthproxy uncertain**:
#       ${ word(yesno(HealthProxy_uncertain)) }
#   - Edit: HealthProxy_info
#     button: |
#       **Healthproxy info**:
#       ${ HealthProxy_info }
#   - Edit: DPA_attached
#     button: |
#       **Dpa attached**:
#       ${ word(yesno(DPA_attached)) }
#   - Edit: DPA
#     button: |
#       **Dpa**:
#       ${ word(yesno(DPA)) }
#   - Edit: DPA_uncertain
#     button: |
#       **Dpa uncertain**:
#       ${ word(yesno(DPA_uncertain)) }
#   - Edit: DPA_info
#     button: |
#       **Dpa info**:
#       ${ DPA_info }
#   - Edit: RespondentMOLST
#     button: |
#       **Respondentmolst**:
#       ${ word(yesno(RespondentMOLST)) }
#   - Edit: RespondentVA
#     button: |
#       **Respondentva**:
#       ${ word(yesno(RespondentVA)) }
#   - Edit: RespondentVA_uncertain
#     button: |
#       **Respondentva uncertain**:
#       ${ word(yesno(RespondentVA_uncertain)) }
#   - Edit: Has_Assets
#     button: |
#       **Has assets**:
#       ${ (Has_Assets) }
#   - Edit: Respondent_Property1
#     button: |
#       **Respondent property1**:
#       ${ Respondent_Property1 }
#   - Edit: Respondent_Property1_value
#     button: |
#       **Respondent property1 value**:
#       ${ Respondent_Property1_value }
#   - Edit: Respondent_Property2
#     button: |
#       **Respondent property2**:
#       ${ Respondent_Property2 }
#   - Edit: Respondent_Property2_value
#     button: |
#       **Respondent property2 value**:
#       ${ Respondent_Property2_value }
#   - Edit: Respondent_Property_total
#     button: |
#       **Respondent property total**:
#       ${ Respondent_Property_total }
#   - Edit: Petition_Assetattachment_yes
#     button: |
#       **Petition assetattachment**:
#       ${ word(yesno(Petition_Assetattachment_yes)) }
#   - Edit: Has_Income
#     button: |
#       **Has income**:
#       ${ word(yesno(Has_Income)) }
#   - Edit: Respondent_Income1
#     button: |
#       **Respondent income1**:
#       ${ Respondent_Income1 }
#   - Edit: Respondent_Income1_value
#     button: |
#       **Respondent income1 value**:
#       ${ Respondent_Income1_value }
#   - Edit: Respondent_Income2
#     button: |
#       **Respondent income2**:
#       ${ Respondent_Income2 }
#   - Edit: Respondent_Income2_value
#     button: |
#       **Respondent income2 value**:
#       ${ Respondent_Income2_value }
#   - Edit: Respondent_Income2_total
#     button: |
#       **Respondent income2 total**:
#       ${ Respondent_Income2_total }
#   - Edit: Respondent_income_attachment_yes
#     button: |
#       **Respondent income attachment**:
#       ${ word(yesno(Respondent_income_attachment_yes)) }
#   - Edit: subJudgment_yes
#     button: |
#       **Subjudgment**:
#       ${ word(yesno(subJudgment_yes)) }
#   - Edit: Nursing_facility_yes
#     button: |
#       **Nursing facility**:
#       ${ word(yesno(Nursing_facility_yes)) }
#   - Edit: antipsychotic_meds_yes
#     button: |
#       **Antipsychotic meds**:
#       ${ word(yesno(antipsychotic_meds_yes)) }
#   - Edit: other_treatment_yes
#     button: |
#       **Other treatment**:
#       ${ word(yesno(other_treatment_yes)) }
#   - Edit: substituted_Judgment_reasons
#     button: |
#       **Substituted judgment reasons**:
#       ${ substituted_Judgment_reasons }
#   - Edit: Revoke_healthproxy_yes
#     button: |
#       **Revoke healthproxy**:
#       ${ word(yesno(Revoke_healthproxy_yes)) }
#   - Edit: Petitioner_appointed_yes_1
#     button: |
#       **Petitioner appointed yes 1**:
#       ${ word(yesno(Petitioner_appointed_yes_1)) }
#   - Edit: Petitioner_appointee_no_1
#     button: |
#       **Petitioner appointee no 1**:
#       ${ word(yesno(Petitioner_appointee_no_1)) }
#   - Edit: Guardian.name.last
#     button: |
#       **Guardian name last 1**:
#       ${ Guardian.name.last }
#   - Edit: Guardian.name.first
#     button: |
#       **Guardian name first 1**:
#       ${ Guardian.name.first }
#   - Edit: Guardian.name.middle
#     button: |
#       **Guardian name mi 1**:
#       ${ Guardian.name.middle }
#   - Edit: Other_appointee_yes_1
#     button: |
#       **Other appointee yes 1**:
#       ${ word(yesno(Other_appointee_yes_1)) }
#   - Edit: Limited_Guardian_yes_2
#     button: |
#       **Limited guardian yes 2**:
#       ${ word(yesno(Limited_Guardian_yes_2)) }
#   - Edit: General_Guardian_yes_2
#     button: |
#       **General guardian yes 2**:
#       ${ word(yesno(General_Guardian_yes_2)) }
#   - Edit: Bond_Waiver_yes
#     button: |
#       **Bond waiver**:
#       ${ word(yesno(Bond_Waiver_yes)) }
#   - Edit: Respondent_minimalfunds_yes
#     button: |
#       **Respondent minimalfunds**:
#       ${ word(yesno(Respondent_minimalfunds_yes)) }
#   - Edit: Conservator_requested_yes
#     button: |
#       **Conservator requested**:
#       ${ word(yesno(Conservator_requested_yes)) }
#   - Edit: Other_bondwaiver_yes
#     button: |
#       **Other bondwaiver**:
#       ${ word(yesno(Other_bondwaiver_yes)) }
#   - Edit: Other_Bondwaiver
#     button: |
#       **Other bondwaiver**:
#       ${ Other_Bondwaiver }
#   - Edit: Additional_request_yes
#     button: |
#       **Additional request**:
#       ${ word(yesno(Additional_request_yes)) }
#   - Edit: Additional_requests
#     button: |
#       **Additional requests**:
#       ${ Additional_requests }
#   - Edit: Date
#     button: |
#       **Date**:
#       ${ Date }
#   - Edit: Date_2
#     button: |
#       **Date 2**:
#       ${ Date_2 }
#   - Edit: Date_3
#     button: |
#       **Date 3**:
#       ${ Date_3 }
#   - Edit: Date_4
#     button: |
#       **Date 4**:
#       ${ Date_4 }
#   - Edit: Date_5
#     button: |
#       **Date 5**:
#       ${ Date_5 }
#   - Edit: Date_6
#     button: |
#       **Date 6**:
#       ${ Date_6 }
#   - Edit: Attorney_BBO
#     button: |
#       **Attorney bbo**:
#       ${ Attorney_BBO }
#   - Edit: docket_numbers[0].name.first
#     button: |
#       **docket_numbers**

#       % for my_var in docket_numbers:
#         * ${ my_var }
#       % endfor
#     # NOTE: a question block with 'docket_numbers.revisit'
#     # lets the user edit all of the items at once
#   - Edit: other_parties[0].birthdate
#     button: |
#       **other_parties[0].birthdate**:
#       ${ other_parties[0].birthdate.format() }
#   - Edit: Attorney.address.state
#     button: |
#       **Attorney.address.state**:
#       ${ Attorney.address.state }
#   - Edit: other_parties[0].name.first
#     button: |
#       **other_parties[0].name.first**:
#       ${ other_parties[0].familiar() }
#   - Edit: Attorney.phone_number
#     button: |
#       **Attorney.phone_number**:
#       ${ Attorney.phone_number }
#   - Edit: Attorney.address.zip
#     button: |
#       **Attorney.address.zip**:
#       ${ Attorney.address.zip }
#   - Edit: users[0].address.city
#     button: |
#       **users[0].address.city**:
#       ${ users[0].address.city }
#   - Edit: Guardian.address.state
#     button: |
#       **Guardian.address.state**:
#       ${ Guardian.address.state }
#   - Edit: Attorney.address.city
#     button: |
#       **Attorney.address.city**:
#       ${ Attorney.address.city }
#   - Edit: Respondent
#     button: |
#       **Respondent**:
#       ${ other_parties[0] }
#   - Edit: other_parties[0].gender
#     button: |
#       **other_parties[0].gender**:
#       ${ other_parties[0].gender }
#   - Edit: Guardian.phone_number
#     button: |
#       **Guardian.phone_number**:
#       ${ Guardian.phone_number }
#   - Edit: Attorney.address.address
#     button: |
#       **Attorney.address.address**:
#       ${ Attorney.address.address }
#   - Edit: Guardian.name.last
#     button: |
#       **Guardian.name.last**:
#       ${ Guardian.name.last }
#   - Edit: other_parties[0].name.last
#     button: |
#       **other_parties[0].name.last**:
#       ${ other_parties[0].name.last }
#   - Edit: users[0].address.zip
#     button: |
#       **users[0].address.zip**:
#       ${ users[0].address.zip }
#   - Edit: Guardian.address.zip
#     button: |
#       **Guardian.address.zip**:
#       ${ Guardian.address.zip }
#   - Edit: users[0].name.last
#     button: |
#       **users[0].name.last**:
#       ${ users[0].name.last }
#   - Edit: Guardian.address.unit
#     button: |
#       **Guardian.address.unit**:
#       ${ Guardian.address.unit }
#   - Edit: Guardian.email
#     button: |
#       **Guardian.email**:
#       ${ Guardian.email }
#   - Edit: other_parties[0].phone_number
#     button: |
#       **other_parties[0].phone_number**:
#       ${ other_parties[0].phone_number }
#   - Edit: users[0].name.first
#     button: |
#       **users[0].name.first**:
#       ${ users[0].name.first }
#   - Edit: users[0].phone_number
#     button: |
#       **users[0].phone_number**:
#       ${ users[0].phone_number }
#   - Edit: Attorney.email
#     button: |
#       **Attorney.email**:
#       ${ Attorney.email }
#   - Edit: Guardian.address.city
#     button: |
#       **Guardian.address.city**:
#       ${ Guardian.address.city }
#   - Edit: Guardian.name.first
#     button: |
#       **Guardian.name.first**:
#       ${ Guardian.name.first }
#   - Edit: Attorney.address.unit
#     button: |
#       **Attorney.address.unit**:
#       ${ Attorney.address.unit }
#   - Edit: Attorney
#     button: |
#       **Attorney**:
#       ${ Attorney }
#   - Edit: Petitioner_Signature
#     button: |
#       **Petitioner_Signature**:
#       ${ Petitioner_Signature }
#   - Edit: Copetitioner_Signature
#     button: |
#       **Copetitioner_Signature**:
#       ${ Copetitioner_Signature }
#   - Edit: Attorney_signature
#     button: |
#       **Attorney_signature**:
#       ${ Attorney_signature }
